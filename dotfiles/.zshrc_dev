
# ~/.zshrc_dev - Nate Dryer's Development Zsh Configuration

# --- Load environment variables from .env file ---
if [ -f "$HOME/.env_dev" ]; then
    export $(cat $HOME/.env_dev | xargs)
fi

# --- Environment Variables ---
export EDITOR="code"
export DEV_DIR="$HOME/development"
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export HISTFILE="$HOME/.zsh_history_dev"
export HISTSIZE=20000  # Increased history size for development
export SAVEHIST=20000
export FUNCNEST=100

# --- Path Configuration ---
export PATH="$HOME/.pyenv/bin:$HOME/.poetry/bin:/opt/homebrew/bin:/usr/local/bin:$PATH"

# --- Homebrew Configuration ---
eval "$(/opt/homebrew/bin/brew shellenv)"

# --- Pyenv Configuration ---
export PYENV_ROOT="$HOME/.pyenv"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# --- Poetry Configuration ---
export PATH="$HOME/.poetry/bin:$PATH"

# --- GitHub Copilot CLI Configuration ---
if command -v gh &> /dev/null; then
    eval "$(gh copilot alias -- zsh)"
fi

# --- Aliases ---
alias ll="ls -la"
alias gs="git status"
alias gp="git pull"
alias gc="git commit -m"
alias cddev="cd $DEV_DIR"
alias brewup="brew update && brew upgrade"
alias editzsh="$EDITOR ~/.zshrc_dev"
alias python="python3"
alias pip="pip3"

# --- Functions ---
load_env() {
    if [ -f "$HOME/.env_dev" ]; then
        export $(cat $HOME/.env_dev | xargs)
    else
        echo ".env_dev file not found."
    fi
}

activate_pyenv() {
    if [ -z "$1" ]; then
        echo "Usage: activate_pyenv <python_version>"
        return 1
    fi

    pyenv install -s "$1"
    pyenv virtualenv "$1" "${1}_env"
    pyenv activate "${1}_env"
    echo "Activated Python $1 environment"
}

oi() {
    OIDIR="$HOME/development/oienv"
    if [ ! -d "$OIDIR" ]; then
        echo "Creating Open Interpreter virtual environment with pyenv..."
        pyenv virtualenv 3.10.11 oienv
        pyenv local oienv
    fi
    pyenv activate oienv
    if ! command -v interpreter &> /dev/null; then
        echo "Installing Open Interpreter..."
        pip install open-interpreter
    fi

    echo "Starting Open Interpreter with OpenAI GPT-4..."
    interpreter --model "gpt-4o" --api_key "$OPENAI_API_KEY"

    pyenv deactivate
}

# Auto-complete for development tools
autoload -Uz compinit
compinit

# Customized prompt with branch info for Git repositories
autoload -Uz vcs_info
precmd() { vcs_info }
zstyle ':vcs_info:git:*' formats '(%b)'
PROMPT='%F{cyan}%n@%m%f %F{green}%~%f $vcs_info_msg_0_ %# '
