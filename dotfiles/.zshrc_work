
# ~/.zshrc_work - Nate Dryer's Work Zsh Configuration

# --- Load environment variables from .env file ---
if [ -f "$HOME/.env_work" ]; then
    export $(cat $HOME/.env_work | xargs)
fi

# --- Environment Variables ---
export EDITOR="vim"
export DEV_DIR="$HOME/work"
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export HISTFILE="$HOME/.zsh_history_work"
export HISTSIZE=15000
export SAVEHIST=15000
export FUNCNEST=100

# --- Path Configuration ---
export PATH="$HOME/.pyenv/bin:$HOME/.poetry/bin:/opt/homebrew/bin:/usr/local/bin:$PATH"

# --- Homebrew Configuration ---
eval "$(/opt/homebrew/bin/brew shellenv)"

# --- Pyenv Configuration ---
export PYENV_ROOT="$HOME/.pyenv"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# --- Poetry Configuration ---
export PATH="$HOME/.poetry/bin:$PATH"

# --- GitHub Copilot CLI Configuration ---
if command -v gh &> /dev/null; then
    eval "$(gh copilot alias -- zsh)"
fi

# --- Aliases ---
alias ll="ls -la"
alias gs="git status"
alias gp="git pull"
alias gc="git commit -m"
alias cdwork="cd $DEV_DIR"
alias brewup="brew update && brew upgrade"
alias editzsh="$EDITOR ~/.zshrc_work"
alias python="python3"
alias pip="pip3"

# --- Functions ---
load_env() {
    if [ -f "$HOME/.env_work" ]; then
        export $(cat $HOME/.env_work | xargs)
    else
        echo ".env_work file not found."
    fi
}

activate_pyenv() {
    if [ -z "$1" ]; then
        echo "Usage: activate_pyenv <python_version>"
        return 1
    fi

    pyenv install -s "$1"
    pyenv virtualenv "$1" "${1}_env"
    pyenv activate "${1}_env"
    echo "Activated Python $1 environment"
}

# Auto-complete for work tools
autoload -Uz compinit
compinit

# Simplified prompt for work
PROMPT='%F{blue}%n@%m%f %F{yellow}%~%f %# '
